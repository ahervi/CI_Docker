heat_template_version: rocky

description: Projet Docker

parameters:
  key:
    type: string
    description: MYKEY

resources:
  prod_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Open all the ports inside the production network"
      rules:
        - remote_ip_prefix: 192.168.2.0/24
          protocol: tcp
        - remote_ip_prefix: 192.168.2.0/24
          protocol: udp
        - remote_ip_prefix: 192.168.2.0/24
          protocol: icmp

  external_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: "Open ssh port"
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: udp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
 
  gitlab_net:
    type: OS::Neutron::Net
    properties:
      name: "gitlab_net"

  gitlab_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: gitlab_net }
      cidr: "192.168.2.0/24"
      dns_nameservers: [ "192.44.75.10" ]
      ip_version: 4
      allocation_pools:
        - start: "192.168.2.100"
          end: "192.168.2.150"
      name: "gitlab_subnet"

  gateway_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: external
      name: "gateway_router"

  gateway_router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: gateway_router}
      subnet_id: { get_resource: gitlab_subnet}

  bastion_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: gitlab_net}
      security_groups: [ get_resource: external_security_group]
      fixed_ips:
        - subnet_id: { get_resource: gitlab_subnet}
          ip_address: 192.168.2.130

  gitlab_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: gitlab_net}
      security_groups: [ get_resource: prod_security_group]
      fixed_ips:
        - subnet_id: { get_resource: gitlab_subnet}
          ip_address: 192.168.2.112

  registry_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: gitlab_net}
      security_groups: [ get_resource: prod_security_group]
      fixed_ips:
        - subnet_id: { get_resource: gitlab_subnet}
          ip_address: 192.168.2.113

  personnel_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: gitlab_net}
      security_groups: [ get_resource: prod_security_group]
      fixed_ips:
        - subnet_id: { get_resource: gitlab_subnet}
          ip_address: 192.168.2.120

  bastion:
    type: OS::Nova::Server
    properties:
      name: bastion
      image: ubuntu_18_current
      flavor: m1.small
      key_name: { get_param: key}
      networks:
        - port: { get_resource: bastion_port }
      user_data: |
        #!/bin/bash
        export IP=`ifconfig ens3 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
        export HOSTNAME=`hostname`
        tee -a /etc/hosts <<EOF
        $IP $HOSTNAME
        EOF
        export DEBIAN_FRONTEND=noninteractive
        export TERM="xterm"
        echo 'Acquire::http::Proxy "http://apt-cacher-01.priv.enst-bretagne.fr:3142";' > /etc/apt/apt.conf.d/01proxy
        localectl set-locale LANG=en_US.UTF-8 LANGUAGE="en_US:en"
        apt-get -y update

  gitlab:
    type: OS::Nova::Server
    properties:
      name: gitlab
      image: ubuntu_18_current
      flavor: m1.small
      key_name: { get_param: key}
      networks:
        - port: { get_resource: gitlab_port }
      user_data: |
        #!/bin/bash
        export IP=`ifconfig ens3 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
        export HOSTNAME=`hostname`
        tee -a /etc/hosts <<EOF
        $IP $HOSTNAME
        EOF
        export DEBIAN_FRONTEND=noninteractive
        export TERM="xterm"
        echo 'Acquire::http::Proxy "http://apt-cacher-01.priv.enst-bretagne.fr:3142";' > /etc/apt/apt.conf.d/01proxy
        localectl set-locale LANG=en_US.UTF-8 LANGUAGE="en_US:en"
        apt-get -y update
  
  registry:
    type: OS::Nova::Server
    properties:
      name: registry
      image: ubuntu_18_current
      flavor: m1.small
      key_name: { get_param: key}
      networks:
        - port: { get_resource: registry_port }
      user_data: |
        #!/bin/bash
        export IP=`ifconfig ens3 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
        export HOSTNAME=`hostname`
        tee -a /etc/hosts <<EOF
        $IP $HOSTNAME
        EOF
        export DEBIAN_FRONTEND=noninteractive
        export TERM="xterm"
        echo 'Acquire::http::Proxy "http://apt-cacher-01.priv.enst-bretagne.fr:3142";' > /etc/apt/apt.conf.d/01proxy
        localectl set-locale LANG=en_US.UTF-8 LANGUAGE="en_US:en"
        apt-get -y update

  personnel:
    type: OS::Nova::Server
    properties:
      name: personnel
      image: ubuntu_18_current
      flavor: m1.small
      key_name: { get_param: key}
      networks:
        - port: { get_resource: personnel_port }
      user_data: |
        #!/bin/bash
        export IP=`ifconfig ens3 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
        export HOSTNAME=`hostname`
        tee -a /etc/hosts <<EOF
        $IP $HOSTNAME
        EOF
        export DEBIAN_FRONTEND=noninteractive
        export TERM="xterm"
        echo 'Acquire::http::Proxy "http://apt-cacher-01.priv.enst-bretagne.fr:3142";' > /etc/apt/apt.conf.d/01proxy
        localectl set-locale LANG=en_US.UTF-8 LANGUAGE="en_US:en"
        apt-get -y update


  association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: d8045f4a-b77d-474d-a430-bf9ec76c3553
      port_id: { get_resource: bastion_port }
